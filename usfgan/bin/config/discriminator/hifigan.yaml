_target_: usfgan.models.HiFiGANMultiScaleMultiPeriodDiscriminator
scales: 3                              # Number of multi-scale discriminator.
scale_downsample_pooling: "AvgPool1d"  # Pooling operation for scale discriminator.
scale_downsample_pooling_params:
  kernel_size: 4                       # Pooling kernel size.
  stride: 2                            # Pooling stride.
  padding: 2                           # Padding size.
scale_discriminator_params:
  in_channels: 1                       # Number of input channels.
  out_channels: 1                      # Number of output channels.
  kernel_sizes: [15, 41, 5, 3]         # List of kernel sizes.
  channels: 128                        # Initial number of channels.
  max_downsample_channels: 1024        # Maximum number of channels in downsampling conv layers.
  max_groups: 16                       # Maximum number of groups in downsampling conv layers.
  bias: true
  downsample_scales: [4, 4, 4, 4, 1]   # Downsampling scales.
  nonlinear_activation: "LeakyReLU"    # Nonlinear activation.
  nonlinear_activation_params:
    negative_slope: 0.1
follow_official_norm: true             # Whether to follow the official norm setting.
periods: [2, 3, 5, 7, 11]              # List of period for multi-period discriminator.
period_discriminator_params:
  in_channels: 1                       # Number of input channels.
  out_channels: 1                      # Number of output channels.
  kernel_sizes: [5, 3]                 # List of kernel sizes.
  channels: 32                         # Initial number of channels.
  downsample_scales: [3, 3, 3, 3, 1]   # Downsampling scales.
  max_downsample_channels: 1024        # Maximum number of channels in downsampling conv layers.
  bias: true                           # Whether to use bias parameter in conv layer."
  nonlinear_activation: "LeakyReLU"    # Nonlinear activation.
  nonlinear_activation_params:         # Nonlinear activation paramters.
    negative_slope: 0.1
  use_weight_norm: true                # Whether to apply weight normalization.
  use_spectral_norm: false             # Whether to apply spectral normalization.
