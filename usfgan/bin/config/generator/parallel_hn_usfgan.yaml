_target_: usfgan.models.ParallelHnUSFGANGenerator
harmonic_network_params:
  blockA: 20                 # Number of adaptive residual blocks.
  cycleA: 4                  # Number of adaptive dilation cycles.
  blockF: 0                  # Number of fixed residual blocks.
  cycleF: 0                  # Number of fixed dilation cycles.
  cascade_mode: 0            # Network cascaded mode (0: adaptive->fix; 1: fix->adaptive).
noise_network_params:
  blockA: 0                  # Number of adaptive residual blocks.
  cycleA: 0                  # Number of adaptive dilation cycles.
  blockF: 5                  # Number of fixed residual blocks.
  cycleF: 5                  # Number of fixed dilation cycles.
  cascade_mode: 0            # Network cascaded mode (0: adaptive->fix; 1: fix->adaptive).
filter_network_params:
  blockA: 0                  # Number of adaptive residual blocks.
  cycleA: 0                  # Number of adaptive dilation cycles.
  blockF: 30                 # Number of fixed residual blocks.
  cycleF: 3                  # Number of fixed dilation cycles.
  cascade_mode: 0            # Network cascaded mode (0: adaptive->fix; 1: fix->adaptive).
periodicity_estimator_params:
  conv_layers: 3             # Number of convolution layers.
  kernel_size: 5             # Kernel size.
  dilation: 1                # Dilation size.
  padding_mode: "replicate"  # Padding mode.
in_channels: 1               # Number of input channels.
out_channels: 1              # Number of output channels.
residual_channels: 64        # Number of channels in residual conv.
gate_channels: 128           # Number of channels in gated conv.
skip_channels: 64            # Number of channels in skip conv.
aux_channels: 62             # Number of channels for auxiliary feature conv.
aux_context_window: 2        # Context window size for auxiliary feature.
                             # If set to 2, previous 2 and future 2 frames will be considered.
use_weight_norm: true        # Whether to use weight norm.
upsample_params:             # Upsampling network parameters.
  upsample_scales: [5, 4, 3, 2]  # Upsampling scales. Product of these must be the same as hop size.
